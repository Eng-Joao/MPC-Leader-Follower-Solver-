<?xml version="1.0"?>
<robot name="diff_robot" xmlns:xacro="http://www.ros.org/wiki/xacro">

<!-- Define namespace as a xacro argument with default value -->
<xacro:arg name="namespace" default=""/>
<!-- Set the namespace property using the argument -->
<xacro:property name="ns" value="$(arg namespace)" />

<!-- Materials -->
<material name="black">
    <color rgba="0 0 0 1.0"/>
</material>

<material name="grey">
    <color rgba="0.7 0.7 0.7 1.0"/>
</material>

<material name="green">
    <color rgba="0.0 0.6 0 1.0"/>
</material>

<material name="white">
    <color rgba="1 1 1 1.0"/>
</material>

<!-- Base footprint -->
<link name="base_footprint"/>

<!-- Base link -->
<link name="base_link">
    <inertial>
        <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
        <mass value="0.5"/>
        <inertia ixx="0.001665" ixy="0.0" ixz="0.0" iyy="0.00441225" iyz="0.0" izz="0.00541625"/>
    </inertial>
    <visual>
        <geometry>  
            <box size="0.7 0.4 0.2"/> 
        </geometry>   
        <origin xyz="0.0 0.0 0.1" rpy="0.0 0.0 0.0"/> 
        <material name="green"/>
    </visual>
</link>

<!-- Left wheel -->
<link name="left_wheel">
    <inertial>
        <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
        <mass value="0.3"/>
        <inertia ixx="0.00081252" ixy="0.0" ixz="0.0" iyy="0.00081252" iyz="0.0" izz="0.0015"/>
    </inertial>
    <visual>
        <geometry>
            <cylinder radius="0.1" length="0.05"/>
        </geometry>
        <origin xyz="0.0 0.0 0.0" rpy="1.57 0.0 0.0"/>
        <material name="black"/>     
    </visual>
    <collision>
        <geometry>
            <cylinder radius="0.1" length="0.05"/>
        </geometry>
        <origin xyz="0.0 0.0 0.0" rpy="1.57 0.0 0.0"/>
    </collision>
</link>

<!-- Right wheel -->
<link name="right_wheel">
    <inertial>
        <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
        <mass value="0.3"/>
        <inertia ixx="0.00081252" ixy="0.0" ixz="0.0" iyy="0.00081252" iyz="0.0" izz="0.0015"/>
    </inertial>
    <visual>
        <geometry>
            <cylinder radius="0.1" length="0.05"/>
        </geometry>
        <origin xyz="0.0 0.0 0.0" rpy="1.57 0.0 0.0"/>
        <material name="black"/>     
    </visual>
    <collision>
        <geometry>
            <cylinder radius="0.1" length="0.05"/>
        </geometry>
        <origin xyz="0.0 0.0 0.0" rpy="1.57 0.0 0.0"/>
    </collision>
</link>

<!-- Caster wheel -->
<link name="caster_wheel">
    <inertial>
        <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
        <mass value="0.1"/>
        <inertia ixx="0.00016666" ixy="0.0" ixz="0.0" iyy="0.00016666" iyz="0.0" izz="0.00016666"/>
    </inertial>
    <visual>
        <geometry>
            <sphere radius="0.05"/>
        </geometry>
        <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
        <material name="black"/>            
    </visual>
    <collision>
        <geometry>
            <sphere radius="0.05"/>
        </geometry>
        <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
    </collision>
</link>

<!-- IMU link -->
<link name="imu_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0.0"/>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
    </visual>
</link>

<!-- LIDAR link -->
<link name="lidar_link">
    <visual>
        <geometry>      
            <cylinder radius="0.1" length="0.05"/>
        </geometry>
        <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
        <material name="white"/>  
    </visual>
    <collision>
        <geometry>
            <cylinder radius="0.05" length="0.05"/>
        </geometry>
        <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
    </collision>
    <inertial>
        <mass value="0.114" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.001" ixy="0.0" ixz="0.0"
                 iyy="0.001" iyz="0.0"
                 izz="0.001" />
    </inertial>
</link>

<!-- Joints -->
<joint name="imu_joint" type="fixed">
    <parent link="base_link"/>
    <child link="imu_link"/>
    <origin xyz="0.1 0.1 0.1" rpy="0.0 0.0 0.0"/>
</joint>

<joint name="base_joint" type="fixed">
    <parent link="base_link"/>
    <child link="base_footprint"/>
    <origin xyz="0.0 0.0 0.05" rpy="0.0 0.0 0.0"/>
</joint>

<joint name="base_lidar_joint" type="fixed">
    <parent link="base_link"/>
    <child link="lidar_link"/>
    <origin xyz="0.0 0.0 0.225" rpy="0.0 0.0 0.0"/>
</joint>

<joint name="left_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="left_wheel"/>
    <origin xyz="-0.175 0.225 0.0" rpy="0 0.0 0.0"/>  
    <axis xyz="0.0 1.0 0.0"/>
    <dynamics damping="0.2" friction="1.0"/>
    <limit effort="100" velocity="50.0"/>
</joint>

<joint name="right_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="right_wheel"/>
    <origin xyz="-0.175 -0.225 0.0" rpy="0 0.0 0.0"/>  
    <axis xyz="0.0 1.0 0.0"/>
    <dynamics damping="0.2" friction="1.0"/>
    <limit effort="100" velocity="50.0"/>
</joint>

<joint name="caster_wheel_joint" type="fixed">
    <parent link="base_link"/>
    <child link="caster_wheel"/>
    <dynamics damping="0.2" friction="0.1"/>
    <origin xyz="0.2 0.0 -0.05" rpy="0.0 0.0 0.0"/>
</joint>

<!-- Gazebo plugins for Harmonic -->
<!-- Differential Drive Plugin -->
<gazebo>
    <plugin filename="gz-sim-diff-drive-system" name="gz::sim::systems::DiffDrive">
        <left_joint>left_wheel_joint</left_joint>
        <right_joint>right_wheel_joint</right_joint>
        <wheel_separation>0.45</wheel_separation> <!--0.38-->
        <wheel_radius>0.1</wheel_radius>
        <odom_publish_frequency>0</odom_publish_frequency>
        <max_linear_acceleration>10.0</max_linear_acceleration>
        <min_linear_acceleration>-10.0</min_linear_acceleration>
        <!-- <max_angular_acceleration>10.0</max_angular_acceleration> -->
        <!-- <min_angular_acceleration>-10.0</min_angular_acceleration> -->
        <max_linear_velocity>5.0</max_linear_velocity>
        <min_linear_velocity>-5.0</min_linear_velocity>
        <max_angular_velocity>5.0</max_angular_velocity>
        <min_angular_velocity>-5.0</min_angular_velocity>
        <frame_id>${ns}/odometry</frame_id>
        <child_frame_id>${ns}/base_link</child_frame_id>
        <!-- ROS2 Topic remapping -->
        <topic>${ns}/cmd_vel</topic>
        <odom_topic>${ns}/odometry</odom_topic>
        <tf_topic>${ns}/tf</tf_topic> <!--enable do /odom -->
    </plugin>
</gazebo>

<gazebo>
    <plugin filename="gz-sim-odometry-publisher-system"
            name="gz::sim::systems::OdometryPublisher">
        <odom_frame>${ns}/odom</odom_frame>
        <robot_base_frame>${ns}/base_link</robot_base_frame>
        <odom_publish_frequency>50</odom_publish_frequency>
        <odom_topic>${ns}/odom</odom_topic>
        <tf_topic>${ns}/odom</tf_topic>
    </plugin>
</gazebo>

<!-- IMU Sensor Plugin -->
<gazebo reference="imu_link">
    <sensor name="imu" type="imu">
        <always_on>true</always_on>
        <update_rate>5</update_rate>
        <plugin filename="gz-sim-imu-system" name="gz::sim::systems::Imu">
            <topic>${ns}/imu</topic>
            <enable_orientation>true</enable_orientation>
            <enable_angular_velocity>true</enable_angular_velocity>
            <enable_linear_acceleration>true</enable_linear_acceleration>
        </plugin>
    </sensor>
</gazebo>

<!-- LIDAR/Laser Sensor Plugin -->
<gazebo reference="lidar_link">
    <sensor name="laser" type="gpu_lidar">
    <pose> 0 0 0 0 0 0 </pose>
    <always_on>true</always_on>
    <visualize>true</visualize>
    <update_rate>10</update_rate>
    <topic>/${ns}/scan</topic>
    
    <gz_frame_id>lidar_link</gz_frame_id>
    <lidar>
        <scan>
        <horizontal>
            <samples>360</samples>
            <min_angle>-3.14</min_angle>
            <max_angle>3.14</max_angle>
        </horizontal>
        </scan>
        <range>
        <min>0.1</min>
        <max>12</max>
        </range>
    </lidar>
    </sensor>
</gazebo>

<!-- Joint State Publisher Plugin -->
<gazebo>
    <plugin filename="gz-sim-joint-state-publisher-system" name="gz::sim::systems::JointStatePublisher">
        <joint_name>left_wheel_joint</joint_name>
        <joint_name>right_wheel_joint</joint_name>
        <topic>${ns}/joint_states</topic>
    </plugin>
</gazebo>


<!-- Material colors for Gazebo visualization -->
<gazebo reference="base_link">
    <material>Gazebo/Green</material>
</gazebo>
<gazebo reference="right_wheel">
    <material>Gazebo/Black</material>
</gazebo>
<gazebo reference="left_wheel">
    <material>Gazebo/Black</material>
</gazebo>
<gazebo reference="caster_wheel">
    <material>Gazebo/Black</material>
</gazebo>

</robot>